@{
    ViewData["Title"] = "Expenses";
}

@model List<Expense>

<div class="text-center">
    <h1 class="display-4">Expenses</h1>
    <p>View all your expenses listed here:</p>
    <hr />
    <div class="d-flex align-self-center align-items-center justify-content-between">
        <a asp-controller="Home" asp-action="CreateEditExpense" class="btn btn-primary">Create / Edit</a>
    </div>
    <hr />

   <table class="table">
       <thead>
           <tr>
               <th>
                   Id
               </th>
                <th>
                    Description
                </th>
                <th>
                    Value
                </th>
                <th>
                    Actions
                </th>
           </tr>
       </thead>

       <tbody>
           @foreach (var expense in Model)
           {
                <tr class="-self-center align-items-center">
                   <td>
                       @expense.Id
                   </td>
                   <td>
                       @expense.Description
                   </td>
                   <td>
                       @expense.Value.ToString("C")
                   </td>
                   <td>
                        <a asp-controller="Home" asp-action="CreateEditExpense" asp-route-id="@expense.Id" class="btn btn-secondary">Edit</a>
                        <a asp-controller="Home" asp-action="DeleteExpense" asp-route-id="@expense.Id" class="btn btn-danger">Delete</a>
                   </td>
               </tr>
			}
       </tbody>
   </table>

   <hr />

   <div class="d-flex justify-content-between align-items-center align-content-center align-self-center">
        <div class="d-flex justify-content-between gap-2">
            @if (ViewBag.Page > 1)
            {
                <a asp-controller="Home" asp-action="Expenses" asp-route-page="@(ViewBag.Page - 1)" asp-route-pageSize="@(ViewBag.PageSize)" class="btn btn-primary">Previous</a>
            }
            else
            {
                <span class="btn btn-secondary disabled">Previous</span>
            }

            @for (int i = Math.Max(1, ViewBag.Page - 5), j = Math.Min(ViewBag.TotalPages, i + 5); i <= j; i++)
            {
                if (i == ViewBag.Page)
                {
                    <span class="btn btn-secondary disabled">@i</span>
                }
                else
                {
                    <a asp-controller="Home" asp-action="Expenses" asp-route-page="@i" asp-route-pageSize="@(ViewBag.PageSize)" class="btn btn-primary">@i</a>
                }
			}

            @if (ViewBag.Page < ViewBag.TotalPages)
            {
                <a asp-controller="Home" asp-action="Expenses" asp-route-page="@(ViewBag.Page + 1)" asp-route-pageSize="@(ViewBag.PageSize)" class="btn btn-primary">Next</a>
            }
            else
            {
                <span class="btn btn-secondary disabled">Next</span>
            }
        </div>

        <form method="get" asp-controller="Home" asp-action="Expenses" class="d-inline">
            @{/* Whenever the user changes the pageSize, we need to send them back to page 1 */}
            <input type="hidden" name="page" value="1" />
            <select name="pageSize" class="form-select" aria-label="Page size" onchange="this.form.submit()">
                @foreach (int pageSize in ViewBag.PageSizes)
                {
                    // It is illegal to have C# in the options, so we'll use an if-else statement instead.
                    if (pageSize == ViewBag.PageSize)
                    {
                        <option value="@pageSize" selected="selected">@pageSize</option>
                    }
                    else
                    {
                        <option value="@pageSize">@pageSize</option>
                    }
                }
            </select>
        </form>

        <p>Total Items: @ViewBag.TotalCount</p>
   </div>
</div>